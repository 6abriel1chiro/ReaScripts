 
 n = 0.08
ref_marker_pos_t = {}
apply_str_marker_edit_take = {}
apply_str_marker_edit_l = {}
apply_str_marker_edit_pos = {}


itemcount = reaper.CountSelectedMediaItems(0)
ref_item = reaper.GetSelectedMediaItem(0, 0)
ref_take = reaper.GetActiveTake(ref_item)
ref_strmarkers_count = reaper.GetTakeNumStretchMarkers(ref_take)
strmarkers_count = reaper.GetTakeNumStretchMarkers(ref_take)
for i = 1, strmarkers_count, 1 do  
  retval, ref_pos, ref_srcpos = reaper.GetTakeStretchMarker(ref_take, i-1)    
  table.insert(ref_marker_pos_t, i, ref_pos)
end
 
 
itemcount = reaper.CountSelectedMediaItems(0) 
for k = 1, itemcount, 1 do  
  item = reaper.GetSelectedMediaItem(0, k-1)  
  if k ~= 1 then  
   if item ~= nil then
    take = reaper.GetActiveTake(item)
    if take ~= nil then
      strmarkers_count = reaper.GetTakeNumStretchMarkers(take)      
      if strmarkers_count ~= nil then
        for l = 1, strmarkers_count, 1 do          
          retval, pos, srcpos = reaper.GetTakeStretchMarker(take, l-1)                    
          for m = 1, #ref_marker_pos_t, 1 do                  
           ref_pos_4check = ref_marker_pos_t[m]
           ref_pos_4check_min = ref_pos_4check - n
           ref_pos_4check_max = ref_pos_4check + n
           if pos < ref_pos_4check_max and pos > ref_pos_4check_min then             
             table.insert(apply_str_marker_edit_take, take)    
             table.insert(apply_str_marker_edit_l, l)                        
             table.insert(apply_str_marker_edit_pos, ref_pos_4check)                             
           end         
          end 
        end
      end
    end
   end
  end
end

for i = 1, #apply_str_marker_edit_l do
    take = apply_str_marker_edit_take[i]
    id = apply_str_marker_edit_l[i] - 1
    position = apply_str_marker_edit_pos[i]
    reaper.SetTakeStretchMarker(take, id, position)
end  

reaper.UpdateArrange()

--reaper.ShowConsoleMsg(id.."\n")  
